#!/usr/bin/env python3
import psycopg2
import logging
import sys

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(message)s')
logger = logging.getLogger()

# –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
DB_PARAMS = {
    "host": "postgres",
    "database": "wb_aggregator",
    "user": "socialist",
    "password": "revolution2023"
}

def recreate_status_column():
    """–£–¥–∞–ª—è–µ—Ç –Ω–∞—Ö—É–π –∏ —Å–æ–∑–¥–∞–µ—Ç –∑–∞–Ω–æ–≤–æ –∫–æ–ª–æ–Ω–∫—É status –∏ enum —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏"""
    conn = None
    try:
        # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —Å –∞–≤—Ç–æ–∫–æ–º–º–∏—Ç–æ–º
        logger.info("üîÑ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...")
        conn = psycopg2.connect(**DB_PARAMS)
        conn.autocommit = True
        
        with conn.cursor() as cursor:
            # 1. –£–¥–∞–ª—è–µ–º –∫–æ–ª–æ–Ω–∫—É status, –µ—Å–ª–∏ –æ–Ω–∞ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
            logger.info("üîÑ –£–¥–∞–ª–µ–Ω–∏–µ –∫–æ–ª–æ–Ω–∫–∏ status...")
            cursor.execute("ALTER TABLE reservations DROP COLUMN IF EXISTS status;")
            logger.info("‚úÖ –ö–æ–ª–æ–Ω–∫–∞ status —É–¥–∞–ª–µ–Ω–∞")
            
            # 2. –£–¥–∞–ª—è–µ–º enum, –µ—Å–ª–∏ –æ–Ω —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
            logger.info("üîÑ –£–¥–∞–ª–µ–Ω–∏–µ —Ç–∏–ø–∞ enum...")
            cursor.execute("DROP TYPE IF EXISTS reservationstatus CASCADE;")
            logger.info("‚úÖ –¢–∏–ø enum —É–¥–∞–ª–µ–Ω")
            
            # 3. –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π enum —Å –Ω—É–∂–Ω—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏, –í–ö–õ–Æ–ß–ê–Ø 'pending'
            logger.info("üîÑ –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ enum —Å –Ω–∏–∂–Ω–∏–º —Ä–µ–≥–∏—Å—Ç—Ä–æ–º...")
            cursor.execute("CREATE TYPE reservationstatus AS ENUM ('pending', 'active', 'confirmed', 'canceled');")
            logger.info("‚úÖ –°–æ–∑–¥–∞–Ω –Ω–æ–≤—ã–π enum –≤ –Ω–∏–∂–Ω–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–µ")
            
            # 4. –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–ª–æ–Ω–∫—É status —Å –Ω–æ–≤—ã–º —Ç–∏–ø–æ–º
            logger.info("üîÑ –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–ª–æ–Ω–∫–∏ status...")
            cursor.execute("""
                ALTER TABLE reservations 
                ADD COLUMN status reservationstatus DEFAULT 'pending';
            """)
            logger.info("‚úÖ –ö–æ–ª–æ–Ω–∫–∞ status –¥–æ–±–∞–≤–ª–µ–Ω–∞")
            
            # 5. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Å–µ–º –∑–∞–ø–∏—Å—è–º —Å—Ç–∞—Ç—É—Å active (–∏–ª–∏ pending, –µ—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –Ω–∞—á–∞—Ç—å —Å —ç—Ç–æ–≥–æ —Å—Ç–∞—Ç—É—Å–∞)
            logger.info("üîÑ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –¥–ª—è –≤—Å–µ—Ö –∑–∞–ø–∏—Å–µ–π...")
            cursor.execute("UPDATE reservations SET status = 'pending';")
            logger.info("‚úÖ –í—Å–µ–º –∑–∞–ø–∏—Å—è–º —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —Å—Ç–∞—Ç—É—Å pending")
            
            # 6. –°–æ–∑–¥–∞–µ–º –∏–Ω–¥–µ–∫—Å
            logger.info("üîÑ –°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω–¥–µ–∫—Å–∞...")
            cursor.execute("CREATE INDEX IF NOT EXISTS idx_reservations_status ON reservations (status);")
            logger.info("‚úÖ –ò–Ω–¥–µ–∫—Å —Å–æ–∑–¥–∞–Ω")
            
            # 7. –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤—Å—ë –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ
            cursor.execute("SELECT DISTINCT status FROM reservations LIMIT 1;")
            result = cursor.fetchone()
            logger.info(f"‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞: —Å—Ç–∞—Ç—É—Å –≤ –±–∞–∑–µ = {result}")
        
        logger.info("‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞")
        return True
        
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False
    finally:
        if conn:
            conn.close()

if __name__ == "__main__":
    logger.info("üöÄ –ó–∞–ø—É—Å–∫ –º–∏–≥—Ä–∞—Ü–∏–∏ –¥–ª—è –ø–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∏—è –∫–æ–ª–æ–Ω–∫–∏ status...")
    if not recreate_status_column():
        logger.error("‚ùå –ú–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–∏–ª–∞—Å—å —Å –æ—à–∏–±–∫–æ–π")
        sys.exit(1)
    logger.info("‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!") 