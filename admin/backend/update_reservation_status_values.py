#!/usr/bin/env python3
import psycopg2
import logging
import sys

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(message)s')
logger = logging.getLogger()

# –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
DB_PARAMS = {
    "host": "postgres",
    "database": "wb_aggregator",
    "user": "socialist",
    "password": "revolution2023"
}

def recreate_status_enum():
    """–ü–µ—Ä–µ—Å–æ–∑–¥–∞–µ—Ç enum —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏ (–Ω–∏–∂–Ω–∏–π —Ä–µ–≥–∏—Å—Ç—Ä)"""
    conn = None
    try:
        # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —Å –∞–≤—Ç–æ–∫–æ–º–º–∏—Ç–æ–º
        logger.info("üîÑ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...")
        conn = psycopg2.connect(**DB_PARAMS)
        conn.autocommit = True
        
        with conn.cursor() as cursor:
            # 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –∫–æ–ª–æ–Ω–∫–∞
            cursor.execute("""
                SELECT EXISTS (
                    SELECT FROM information_schema.columns 
                    WHERE table_schema = 'public' 
                    AND table_name = 'reservations' 
                    AND column_name = 'status'
                );
            """)
            has_status_column = cursor.fetchone()[0]
            
            # 2. –ï—Å–ª–∏ –∫–æ–ª–æ–Ω–∫–∞ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, —É–¥–∞–ª—è–µ–º –µ—ë
            if has_status_column:
                logger.info("üîÑ –£–¥–∞–ª–µ–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π –∫–æ–ª–æ–Ω–∫–∏ status")
                cursor.execute("ALTER TABLE reservations DROP COLUMN IF EXISTS status;")
                logger.info("‚úÖ –ö–æ–ª–æ–Ω–∫–∞ status —É–¥–∞–ª–µ–Ω–∞")
            
            # 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ enum –∏ —É–¥–∞–ª—è–µ–º –µ–≥–æ
            cursor.execute("SELECT EXISTS (SELECT 1 FROM pg_type WHERE typname = 'reservationstatus');")
            enum_exists = cursor.fetchone()[0]
            
            if enum_exists:
                logger.info("üîÑ –£–¥–∞–ª–µ–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ enum reservationstatus")
                cursor.execute("DROP TYPE IF EXISTS reservationstatus CASCADE;")
                logger.info("‚úÖ –¢–∏–ø enum —É–¥–∞–ª–µ–Ω")
            
            # 4. –°–æ–∑–¥–∞–µ–º enum —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏ –≤ –Ω–∏–∂–Ω–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–µ
            logger.info("üîÑ –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ enum —Å –∑–Ω–∞—á–µ–Ω–∏—è–º–∏ –≤ –Ω–∏–∂–Ω–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–µ")
            cursor.execute("CREATE TYPE reservationstatus AS ENUM ('active', 'confirmed', 'canceled');")
            logger.info("‚úÖ –°–æ–∑–¥–∞–Ω —Ç–∏–ø enum —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏")
            
            # 5. –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–ª–æ–Ω–∫—É —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º —Ç–∏–ø–æ–º
            logger.info("üîÑ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–æ–ª–æ–Ω–∫–∏ status —Å –Ω–æ–≤—ã–º —Ç–∏–ø–æ–º")
            cursor.execute("""
                ALTER TABLE reservations
                ADD COLUMN status reservationstatus DEFAULT 'active';
            """)
            logger.info("‚úÖ –ö–æ–ª–æ–Ω–∫–∞ status –¥–æ–±–∞–≤–ª–µ–Ω–∞")
            
            # 6. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Å–µ–º –∑–∞–ø–∏—Å—è–º —Å—Ç–∞—Ç—É—Å 'active'
            logger.info("üîÑ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ 'active' –¥–ª—è –≤—Å–µ—Ö –∑–∞–ø–∏—Å–µ–π")
            cursor.execute("UPDATE reservations SET status = 'active';")
            logger.info("‚úÖ –°—Ç–∞—Ç—É—Å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –¥–ª—è –≤—Å–µ—Ö –∑–∞–ø–∏—Å–µ–π")
            
            # 7. –°–æ–∑–¥–∞–µ–º –∏–Ω–¥–µ–∫—Å –¥–ª—è —É—Å–∫–æ—Ä–µ–Ω–∏—è –ø–æ–∏—Å–∫–∞
            logger.info("üîÑ –°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω–¥–µ–∫—Å–∞ –¥–ª—è –∫–æ–ª–æ–Ω–∫–∏ status")
            cursor.execute("CREATE INDEX IF NOT EXISTS idx_reservations_status ON reservations (status);")
            logger.info("‚úÖ –ò–Ω–¥–µ–∫—Å —Å–æ–∑–¥–∞–Ω")
        
        logger.info("‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞")
        return True
        
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Ç–∏–ø–∞ enum: {e}")
        return False
    finally:
        if conn:
            conn.close()

if __name__ == "__main__":
    logger.info("üöÄ –ó–∞–ø—É—Å–∫ –º–∏–≥—Ä–∞—Ü–∏–∏ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–∏–ø–∞ enum ReservationStatus...")
    if not recreate_status_enum():
        logger.error("‚ùå –ú–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–∏–ª–∞—Å—å —Å –æ—à–∏–±–∫–æ–π")
        sys.exit(1)
    logger.info("‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!") 