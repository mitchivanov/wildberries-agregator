version: '3.8'

services:
  init-dhparams:
    image: certbot/certbot
    restart: "no"
    entrypoint: /bin/sh
    command: -c 'test -f /etc/letsencrypt/ssl-dhparams.pem || openssl dhparam -out /etc/letsencrypt/ssl-dhparams.pem 2048'
    volumes:
      - certbot-data:/etc/letsencrypt

  certbot-oneshot:
    image: certbot/certbot
    restart: "no"
    entrypoint: /bin/sh
    command: -c 'certbot certonly --standalone -d develooper.ru --email ${DOMAIN_EMAIL} --rsa-key-size 2048 --agree-tos --force-renewal'
    ports:
      - "80:80"
    volumes:
      - certbot-data:/etc/letsencrypt
      - certbot-www:/var/www/certbot

  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: wb_aggregator
      POSTGRES_USER: socialist
      POSTGRES_PASSWORD: revolution2023
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U socialist -d wb_aggregator"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - backend-network

  backend:
    build: ./admin/backend
    environment:
      DATABASE_URL: postgresql+asyncpg://socialist:revolution2023@postgres:5432/wb_aggregator
      BOT_TOKEN: ${TELEGRAM_BOT_TOKEN}
      TELEGRAM_WEBAPP_URL: ${WEBAPP_URL}
      DEVELOPMENT_MODE: "False"
      BOT_API_URL: http://bot:8001
    depends_on:
      postgres:
        condition: service_healthy
    expose:
      - "8000"
    networks:
      - backend-network

  frontend:
    build: ./admin/frontend
    depends_on:
      - backend
    expose:
      - "80"
    environment:
      VITE_API_URL: ${API_URL}
    networks: 
      - frontend-network

  bot:
    build:
      context: ./admin/bot
    environment:
      BOT_TOKEN: ${TELEGRAM_BOT_TOKEN}
      WEBAPP_URL: ${WEBAPP_URL}
      SUPER_ADMIN_ID: ${SUPER_ADMIN_ID}
    depends_on:
      - backend
    env_file:
      - .env
    expose:
      - "8001"
    networks:
      - backend-network

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./admin/nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - certbot-data:/etc/letsencrypt:ro
      - certbot-www:/var/www/certbot
      - ./admin/frontend/dist:/usr/share/nginx/html
    depends_on:
      init-dhparams:
        condition: service_completed_successfully
      certbot-oneshot:
        condition: service_completed_successfully
      frontend:
        condition: service_started
      backend:
        condition: service_started
      bot:
        condition: service_started
    networks:
      - frontend-network
      - backend-network
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

  certbot:
    image: certbot/certbot
    entrypoint: /bin/sh
    command: -c 'trap exit TERM; while :; do certbot renew; sleep 24h & wait $${!}; done;'
    volumes:
      - certbot-data:/etc/letsencrypt
      - certbot-www:/var/www/certbot
    depends_on:
      nginx:
        condition: service_started

volumes:
  postgres_data:
  certbot-data:
  certbot-www:

networks:
  backend-network:
  frontend-network: 