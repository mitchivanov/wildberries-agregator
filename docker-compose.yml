services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: wb_aggregator
      POSTGRES_USER: socialist
      POSTGRES_PASSWORD: revolution2023
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U socialist -d wb_aggregator" ]
    networks:
      - backend-network

  redis:
    image: redis:7-alpine
    restart: always
    ports:
      - "6379:6379"
    networks:
      - backend-network

  backend:
    build: ./admin/backend
    env_file:
      - .env
    environment:
      - DATABASE_URL
      - TELEGRAM_WEBAPP_URL
      - BOT_API_URL
      - TELEGRAM_BOT_TOKEN
      - SUPER_ADMIN_IDS
      - DEVELOPMENT_MODE
      - PYTHONUNBUFFERED=1
    volumes:
      - ./logs:/app/logs
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - backend-network
      - frontend-network

  frontend:
    build:
      context: ./admin/frontend
      args:
        # Добавляем args для передачи в Dockerfile
        - VITE_API_URL=${VITE_API_URL}
        - VITE_ADMIN_LOGIN=${VITE_ADMIN_LOGIN}
        - VITE_ADMIN_PASSWORD=${VITE_ADMIN_PASSWORD}
        - VITE_TELEGRAM_WEBAPP_URL=${VITE_TELEGRAM_WEBAPP_URL}
    volumes:
      # Монтируем сертификаты из хост-системы
      - /etc/letsencrypt:/etc/letsencrypt:ro
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - backend
    networks:
      - frontend-network
    env_file:
      - .env

  bot:
    build: ./admin/bot
    env_file:
      - .env
    environment:
      - TELEGRAM_BOT_TOKEN
      - TELEGRAM_WEBAPP_URL
      - DATABASE_URL
      - API_URL
      - SUPER_ADMIN_IDS
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - backend-network

  notification_worker:
    build: ./admin/backend
    command: ["python", "notification_worker.py"]
    env_file:
      - .env
    environment:
      - DATABASE_URL
      - TELEGRAM_WEBAPP_URL
      - BOT_API_URL
      - TELEGRAM_BOT_TOKEN
      - SUPER_ADMIN_IDS
      - DEVELOPMENT_MODE
      - REDIS_URL=redis://redis:6379/0
      - PYTHONUNBUFFERED=1
    depends_on:
      - redis
      - backend
    networks:
      - backend-network
    restart: always

volumes:
  postgres_data:


networks:
  backend-network:
  frontend-network:
